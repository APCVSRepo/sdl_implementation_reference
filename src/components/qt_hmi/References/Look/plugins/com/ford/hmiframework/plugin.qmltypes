import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated with the command 'C:\Qt\Qt5.0.1\5.0.1\msvc2010\bin\qmlplugindump.exe -notrelocatable com.ford.hmiframework 1.0 C:\HMIRepository\trunk\Framework\QtHMIFramework\output'.

Module {
    Component {
        name: "FAbstractListElement"
        prototype: "QObject"
        exports: ["com.ford.hmiframework/FAbstractListElement 1.0"]
        Signal {
            name: "elementSelected"
            Parameter { name: "element"; type: "FAbstractListElement"; isPointer: true }
        }
        Method { name: "selectElement" }
    }
    Component {
        name: "FAbstractListModel"
        prototype: "QAbstractListModel"
        exports: ["com.ford.hmiframework/FAbstractListModel 1.0"]
        Signal {
            name: "elementSelected"
            Parameter { type: "FAbstractListElement"; isPointer: true }
            Parameter { type: "int" }
        }
    }
    Component {
        name: "FActAnimControl"
        prototype: "FAction"
        exports: ["com.ford.hmiframework/FActAnimControl 1.0"]
        Property { name: "animation"; type: "FAnimation"; isPointer: true }
        Property { name: "animAction"; type: "int" }
    }
    Component {
        name: "FActEventFire"
        prototype: "FAction"
        exports: ["com.ford.hmiframework/FActEventFire 1.0"]
        Property { name: "event"; type: "FEvent"; isPointer: true }
        Property { name: "data"; type: "QVariant" }
    }
    Component {
        name: "FActFunction"
        defaultProperty: "actions"
        prototype: "FAction"
        exports: ["com.ford.hmiframework/FActFunction 1.0"]
        Property { name: "data"; type: "QVariant" }
        Property { name: "actions"; type: "FAction"; isList: true; isReadonly: true }
    }
    Component {
        name: "FActFunctionCall"
        prototype: "FAction"
        exports: ["com.ford.hmiframework/FActFunctionCall 1.0"]
        Property { name: "func"; type: "FActFunction"; isPointer: true }
        Property { name: "data"; type: "QVariant" }
    }
    Component {
        name: "FActHistoryClear"
        prototype: "FAction"
        exports: ["com.ford.hmiframework/FActHistoryClear 1.0"]
        Property { name: "queue"; type: "string" }
    }
    Component {
        name: "FActHistoryPop"
        prototype: "FAction"
        exports: ["com.ford.hmiframework/FActHistoryPop 1.0"]
        Property { name: "queue"; type: "string" }
    }
    Component {
        name: "FActHistoryPush"
        prototype: "FAction"
        exports: ["com.ford.hmiframework/FActHistoryPush 1.0"]
        Property { name: "queue"; type: "string" }
        Property { name: "animation"; type: "string" }
        Property { name: "data"; type: "QVariant" }
    }
    Component {
        name: "FActHistoryShow"
        prototype: "FAction"
        exports: ["com.ford.hmiframework/FActHistoryShow 1.0"]
        Property { name: "queue"; type: "string" }
        Property { name: "animation"; type: "string" }
        Property { name: "skipMe"; type: "bool" }
    }
    Component {
        name: "FActViewHide"
        prototype: "FAction"
        exports: ["com.ford.hmiframework/FActViewHide 1.0"]
        Property { name: "view"; type: "string" }
        Property { name: "animation"; type: "string" }
    }
    Component {
        name: "FActViewShow"
        prototype: "FAction"
        exports: ["com.ford.hmiframework/FActViewShow 1.0"]
        Property { name: "view"; type: "string" }
        Property { name: "animation"; type: "string" }
        Property { name: "data"; type: "QVariant" }
    }
    Component {
        name: "FAction"
        prototype: "FMetaInfoObject"
        exports: ["com.ford.hmiframework/FAction 1.0"]
        Property { name: "passed"; type: "bool" }
        Signal { name: "execute" }
        Method { name: "getDisplay"; type: "FDisplay*" }
        Method { name: "getStateView"; type: "FStateView*" }
    }
    Component {
        name: "FAnimView"
        defaultProperty: "data"
        prototype: "FAnimation"
        exports: ["com.ford.hmiframework/FAnimView 1.0"]
        Property { name: "inView"; type: "FStateView"; isPointer: true }
        Property { name: "outView"; type: "FStateView"; isPointer: true }
        Property { name: "ingoing"; type: "FLayout"; isReadonly: true; isPointer: true }
        Property { name: "outgoing"; type: "FLayout"; isReadonly: true; isPointer: true }
    }
    Component {
        name: "FAnimation"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["com.ford.hmiframework/FAnimation 1.0"]
        Property { name: "isRunning"; type: "bool"; isReadonly: true }
        Signal {
            name: "animationComplete"
            Parameter { name: "anim"; type: "FAnimation"; isPointer: true }
        }
    }
    Component {
        name: "FAnimationCoordinator"
        defaultProperty: "defaultAnims"
        prototype: "FMetaInfoObject"
        exports: ["com.ford.hmiframework/FAnimationCoordinator 1.0"]
        Property { name: "defaultAnims"; type: "FDefaultAnimation"; isList: true; isReadonly: true }
    }
    Component {
        name: "FDefaultAnimation"
        prototype: "FMetaInfoObject"
        exports: ["com.ford.hmiframework/FDefaultAnimation 1.0"]
        Property { name: "from"; type: "FViewClass"; isPointer: true }
        Property { name: "to"; type: "FViewClass"; isPointer: true }
        Property { name: "animation"; type: "string" }
    }
    Component {
        name: "FDisplay"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["com.ford.hmiframework/FDisplay 1.0"]
        Property { name: "xPixel"; type: "int" }
        Property { name: "yPixel"; type: "int" }
        Property { name: "initialView"; type: "string" }
        Property { name: "initialAnim"; type: "string" }
        Property { name: "modelPath"; type: "QUrl" }
        Property { name: "activeVariant"; type: "string" }
        Property { name: "priorityLayerCount"; type: "int" }
        Property { name: "minPriority"; type: "int" }
        Property { name: "priorityLayerDebug"; type: "QStringList"; isReadonly: true }
        Property { name: "viewCacheSize"; type: "int" }
        Signal { name: "preStartInit" }
        Method {
            name: "animationCompleted"
            Parameter { type: "FAnimation"; isPointer: true }
        }
        Method { name: "updateDebugInformation" }
    }
    Component {
        name: "FEvent"
        prototype: "FMetaInfoObject"
        exports: ["com.ford.hmiframework/FEvent 1.0"]
        Signal {
            name: "fire"
            Parameter { name: "data"; type: "QVariant" }
        }
        Method {
            name: "doFire"
            Parameter { name: "data"; type: "QVariant" }
        }
    }
    Component {
        name: "FGrdCondition"
        defaultProperty: "actions"
        prototype: "FGuard"
        exports: ["com.ford.hmiframework/FGrdCondition 1.0"]
        Property { name: "condition"; type: "bool" }
    }
    Component {
        name: "FGuard"
        defaultProperty: "actions"
        prototype: "FAction"
        exports: ["com.ford.hmiframework/FGuard 1.0"]
        Property { name: "actions"; type: "FAction"; isList: true; isReadonly: true }
    }
    Component {
        name: "FHardwareControl"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["com.ford.hmiframework/FHardwareControl 1.0"]
        Property { name: "hardwareControlID"; type: "string" }
        Signal {
            name: "checkKeyPressed"
            Parameter { name: "key"; type: "int" }
        }
        Signal {
            name: "checkKeyReleased"
            Parameter { name: "key"; type: "int" }
        }
        Method {
            name: "sendHardwareControlEvent"
            Parameter { name: "data"; type: "int" }
        }
    }
    Component {
        name: "FHardwareKey"
        defaultProperty: "data"
        prototype: "FHardwareControl"
        exports: ["com.ford.hmiframework/FHardwareKey 1.0"]
        Property { name: "pressed"; type: "bool" }
        Property { name: "keyboardKey"; type: "int" }
        Property { name: "longPressMSec"; type: "int" }
        Property { name: "repeatDelayMSec"; type: "int" }
        Property { name: "repeatIntervalMSec"; type: "int" }
    }
    Component {
        name: "FHardwareRotary"
        defaultProperty: "knob"
        prototype: "FHardwareControl"
        exports: ["com.ford.hmiframework/FHardwareRotary 1.0"]
        Property { name: "knob"; type: "QQuickItem"; isPointer: true }
        Property { name: "stepsPerRotation"; type: "int" }
        Property { name: "currentAbsPosition"; type: "int" }
        Property { name: "currentRelPosition"; type: "int" }
        Property { name: "generateEvents"; type: "bool" }
        Property { name: "updateInterval"; type: "int" }
    }
    Component {
        name: "FLayer"
        defaultProperty: "data"
        prototype: "FWidgetBase"
        exports: ["com.ford.hmiframework/FLayer 1.0"]
        Property { name: "layerID"; type: "int" }
        Property { name: "initialView"; type: "string" }
        Property { name: "activeViewName"; type: "string" }
    }
    Component {
        name: "FLayout"
        defaultProperty: "data"
        prototype: "FMetaInfoItem"
        exports: ["com.ford.hmiframework/FLayout 1.0"]
        Property { name: "viewX"; type: "double" }
        Property { name: "viewY"; type: "double" }
        Property { name: "viewZ"; type: "double" }
    }
    Component {
        name: "FLogHandlerItem"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["com.ford.hmiframework/FLogHandlerItem 1.0"]
        Signal {
            name: "newEntry"
            Parameter { name: "s"; type: "string" }
        }
    }
    Component {
        name: "FLogger"
        prototype: "QObject"
        exports: ["com.ford.hmiframework/FLogger 1.0"]
        Property { name: "perfStamp"; type: "bool" }
        Method {
            name: "debug"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "s"; type: "string" }
        }
        Method {
            name: "warning"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "s"; type: "string" }
        }
        Method {
            name: "error"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "s"; type: "string" }
        }
        Method {
            name: "info"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "s"; type: "string" }
        }
        Method {
            name: "perf"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "s"; type: "string" }
        }
    }
    Component {
        name: "FLoggerConsole"
        prototype: "QObject"
        exports: ["com.ford.hmiframework/FLoggerConsole 1.0"]
    }
    Component {
        name: "FLoggerFile"
        prototype: "QObject"
        exports: ["com.ford.hmiframework/FLoggerFile 1.0"]
        Property { name: "file"; type: "string" }
    }
    Component {
        name: "FMenuElement"
        defaultProperty: "children"
        prototype: "FTreeElement"
        exports: ["com.ford.hmiframework/FMenuElement 1.0"]
        Enum {
            name: "MenuElementType"
            values: {
                "Undefined": 0,
                "Submenu": 1,
                "Popup": 2,
                "Hyperlink": 3,
                "Checkbox": 4,
                "Radiobutton": 5,
                "Multistate": 6
            }
        }
        Property { name: "isVisible"; type: "bool" }
        Property { name: "isEnabled"; type: "bool" }
        Property { name: "menuType"; type: "int" }
        Property { name: "menuText"; type: "string" }
        Property { name: "menuIcon"; type: "string" }
        Property { name: "menuStatus"; type: "int" }
        Property { name: "menuData"; type: "QVariant" }
    }
    Component {
        name: "FMenuModel"
        defaultProperty: "children"
        prototype: "FTreeModel"
        exports: ["com.ford.hmiframework/FMenuModel 1.0"]
    }
    Component {
        name: "FMetaInfoItem"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["com.ford.hmiframework/FMetaInfoItem 1.0"]
        Property { name: "metaInfo"; type: "string" }
        Property { name: "metaID"; type: "string" }
        Property { name: "metaVersion"; type: "string" }
    }
    Component {
        name: "FMetaInfoObject"
        prototype: "QObject"
        exports: ["com.ford.hmiframework/FMetaInfoObject 1.0"]
        Property { name: "metaInfo"; type: "string" }
        Property { name: "metaID"; type: "string" }
        Property { name: "metaVersion"; type: "string" }
    }
    Component {
        name: "FProxyListModel"
        prototype: "QIdentityProxyModel"
        exports: ["com.ford.hmiframework/FProxyListModel 1.0"]
        Property { name: "sourceModel"; type: "FAbstractListModel"; isPointer: true }
        Property { name: "isFrozen"; type: "bool" }
        Signal {
            name: "elementSelected"
            Parameter { type: "FAbstractListElement"; isPointer: true }
            Parameter { type: "int" }
        }
        Method {
            name: "selectElement"
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        name: "FReactiveElementBase"
        prototype: "FMetaInfoObject"
        exports: ["com.ford.hmiframework/FReactiveElementBase 1.0"]
        Property { name: "triggers"; type: "FTrigger"; isList: true; isReadonly: true }
    }
    Component {
        name: "FState"
        prototype: "FStateBase"
        exports: ["com.ford.hmiframework/FState 1.0"]
        Property { name: "baseBehavior"; type: "FStateBase"; isPointer: true }
    }
    Component {
        name: "FStateBase"
        prototype: "FReactiveElementBase"
        exports: ["com.ford.hmiframework/FStateBase 1.0"]
    }
    Component {
        name: "FStateView"
        defaultProperty: "childObjects"
        prototype: "FState"
        exports: ["com.ford.hmiframework/FStateView 1.0"]
        Property { name: "priority"; type: "int" }
        Property { name: "visualPriority"; type: "int" }
        Property { name: "view"; type: "FView"; isPointer: true }
        Property { name: "preload"; type: "QVariant" }
        Property { name: "attachedViews"; type: "QStringList" }
        Property { name: "childObjects"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "isInEntry"; type: "bool"; isReadonly: true }
        Property { name: "isInExit"; type: "bool"; isReadonly: true }
        Signal {
            name: "entry"
            Parameter { name: "previousView"; type: "string" }
            Parameter { name: "data"; type: "QVariant" }
        }
        Signal { name: "entryComplete" }
        Signal { name: "exit" }
        Signal { name: "exitComplete" }
    }
    Component {
        name: "FThemeProvider"
        prototype: "QObject"
        exports: ["com.ford.hmiframework/FThemeProvider 1.0"]
        Property { name: "theme"; type: "string" }
        Property { name: "resourcePath"; type: "QUrl" }
        Method {
            name: "getFileSubPath"
            type: "string"
            Parameter { type: "string" }
        }
        Method {
            name: "getStyle"
            type: "FStyle*"
            Parameter { type: "string" }
        }
        Method {
            name: "applyStyle"
            Parameter { name: "target"; type: "QObject"; isPointer: true }
            Parameter { name: "styleName"; type: "string" }
        }
    }
    Component {
        name: "FTreeElement"
        defaultProperty: "children"
        prototype: "FAbstractListElement"
        exports: ["com.ford.hmiframework/FTreeElement 1.0"]
        Property { name: "children"; type: "FTreeElement"; isList: true; isReadonly: true }
        Property { name: "level"; type: "int"; isReadonly: true }
        Property { name: "isOpened"; type: "bool" }
    }
    Component {
        name: "FTreeModel"
        defaultProperty: "children"
        prototype: "FAbstractListModel"
        exports: ["com.ford.hmiframework/FTreeModel 1.0"]
        Property { name: "children"; type: "FTreeElement"; isList: true; isReadonly: true }
        Property { name: "root"; type: "FTreeElement"; isPointer: true }
        Property { name: "rootRoot"; type: "FTreeElement"; isReadonly: true; isPointer: true }
        Method {
            name: "openElement"
            Parameter { name: "numIndex"; type: "int" }
        }
        Method {
            name: "closeElement"
            Parameter { name: "numIndex"; type: "int" }
        }
        Method {
            name: "selectElement"
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        name: "FTrgAnimCompleted"
        defaultProperty: "actions"
        prototype: "FTrigger"
        exports: ["com.ford.hmiframework/FTrgAnimCompleted 1.0"]
        Property { name: "animation"; type: "FAnimation"; isPointer: true }
        Method {
            name: "animCompleted"
            Parameter { type: "FAnimation"; isPointer: true }
        }
    }
    Component {
        name: "FTrgCondition"
        defaultProperty: "actions"
        prototype: "FTrigger"
        exports: ["com.ford.hmiframework/FTrgCondition 1.0"]
        Property { name: "condition"; type: "bool" }
        Property { name: "checkOnEntry"; type: "bool" }
    }
    Component {
        name: "FTrgEntry"
        defaultProperty: "actions"
        prototype: "FTrigger"
        exports: ["com.ford.hmiframework/FTrgEntry 1.0"]
        Property { name: "previousView"; type: "string"; isReadonly: true }
        Property { name: "data"; type: "QVariant"; isReadonly: true }
        Method {
            name: "entry"
            Parameter { name: "previousView"; type: "string" }
            Parameter { name: "data"; type: "QVariant" }
        }
    }
    Component {
        name: "FTrgEntryComplete"
        defaultProperty: "actions"
        prototype: "FTrigger"
        exports: ["com.ford.hmiframework/FTrgEntryComplete 1.0"]
    }
    Component {
        name: "FTrgEvent"
        defaultProperty: "actions"
        prototype: "FTrigger"
        exports: ["com.ford.hmiframework/FTrgEvent 1.0"]
        Property { name: "event"; type: "FEvent"; isPointer: true }
        Property { name: "data"; type: "QVariant" }
        Method {
            name: "eventTrigger"
            Parameter { name: "data"; type: "QVariant" }
        }
    }
    Component {
        name: "FTrgExit"
        defaultProperty: "actions"
        prototype: "FTrigger"
        exports: ["com.ford.hmiframework/FTrgExit 1.0"]
    }
    Component {
        name: "FTrgExitComplete"
        defaultProperty: "actions"
        prototype: "FTrigger"
        exports: ["com.ford.hmiframework/FTrgExitComplete 1.0"]
    }
    Component {
        name: "FTrgHardwareControl"
        defaultProperty: "actions"
        prototype: "FTrigger"
        exports: ["com.ford.hmiframework/FTrgHardwareControl 1.0"]
        Property { name: "hardControls"; type: "QVariant" }
        Signal {
            name: "handleHardwareControlEvent"
            Parameter { name: "action"; type: "int" }
        }
    }
    Component {
        name: "FTrgHardwareKey"
        defaultProperty: "actions"
        prototype: "FTrgHardwareControl"
        exports: ["com.ford.hmiframework/FTrgHardwareKey 1.0"]
        Property { name: "keyAction"; type: "int" }
        Property { name: "hardkeys"; type: "QVariant" }
    }
    Component {
        name: "FTrgHardwareRotary"
        defaultProperty: "actions"
        prototype: "FTrgHardwareControl"
        exports: ["com.ford.hmiframework/FTrgHardwareRotary 1.0"]
        Property { name: "valueChange"; type: "int" }
        Property { name: "rotary"; type: "QVariant" }
    }
    Component {
        name: "FTrgListModel"
        defaultProperty: "actions"
        prototype: "FTrigger"
        exports: ["com.ford.hmiframework/FTrgListModel 1.0"]
        Property { name: "model"; type: "FAbstractListModel"; isPointer: true }
        Property { name: "element"; type: "FAbstractListElement"; isReadonly: true; isPointer: true }
        Property { name: "index"; type: "int"; isReadonly: true }
        Method {
            name: "elementSelected"
            Parameter { type: "FAbstractListElement"; isPointer: true }
            Parameter { type: "int" }
        }
    }
    Component {
        name: "FTrgMenuElement"
        defaultProperty: "actions"
        prototype: "FTrigger"
        exports: ["com.ford.hmiframework/FTrgMenuElement 1.0"]
        Property { name: "menuElement"; type: "FMenuElement"; isPointer: true }
        Method {
            name: "elementSelected"
            Parameter { type: "FAbstractListElement"; isPointer: true }
        }
    }
    Component {
        name: "FTrgTouchArea"
        defaultProperty: "actions"
        prototype: "FTrigger"
        exports: ["com.ford.hmiframework/FTrgTouchArea 1.0"]
        Property { name: "touchArea"; type: "FWdgtTouchArea"; isPointer: true }
        Property { name: "touchAction"; type: "int" }
        Property { name: "xPos"; type: "int" }
        Property { name: "yPos"; type: "int" }
        Method {
            name: "touchEvent"
            Parameter { name: "action"; type: "int" }
            Parameter { name: "x"; type: "int" }
            Parameter { name: "y"; type: "int" }
        }
    }
    Component {
        name: "FTrigger"
        defaultProperty: "actions"
        prototype: "FMetaInfoObject"
        exports: ["com.ford.hmiframework/FTrigger 1.0"]
        Property { name: "initialized"; type: "bool" }
        Property { name: "actions"; type: "FAction"; isList: true; isReadonly: true }
        Signal {
            name: "init"
            Parameter { type: "FStateView"; isPointer: true }
        }
        Signal {
            name: "cleanup"
            Parameter { type: "FStateView"; isPointer: true }
        }
        Signal { name: "intializedChanged" }
    }
    Component {
        name: "FView"
        defaultProperty: "data"
        prototype: "FWidget"
        exports: ["com.ford.hmiframework/FView 1.0"]
        Property { name: "viewClass"; type: "FViewClass"; isPointer: true }
    }
    Component {
        name: "FViewClass"
        defaultProperty: "derivedClass"
        prototype: "FMetaInfoObject"
        exports: ["com.ford.hmiframework/FViewClass 1.0"]
        Property { name: "derivedClass"; type: "FViewClass"; isList: true; isReadonly: true }
    }
    Component {
        name: "FWdgtTouchArea"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["com.ford.hmiframework/FWdgtTouchArea 1.0"]
        Property { name: "pressed"; type: "bool" }
        Property { name: "enabled"; type: "bool" }
        Property { name: "longPressMSec"; type: "int" }
        Property { name: "repeatDelayMSec"; type: "int" }
        Property { name: "repeatIntervalMSec"; type: "int" }
        Signal {
            name: "touchEvent"
            Parameter { name: "event"; type: "int" }
            Parameter { name: "x"; type: "int" }
            Parameter { name: "y"; type: "int" }
        }
    }
    Component {
        name: "FWidget"
        defaultProperty: "data"
        prototype: "FWidgetBase"
        exports: ["com.ford.hmiframework/FWidget 1.0"]
        Property { name: "layout"; type: "FLayout"; isPointer: true }
        Property { name: "triggers"; type: "FTrigger"; isList: true; isReadonly: true }
    }
    Component { name: "FWidgetBase"; defaultProperty: "data"; prototype: "FMetaInfoItem" }
    Component {
        name: "QAbstractProxyModel"
        prototype: "QAbstractItemModel"
        Property { name: "sourceModel"; type: "QAbstractItemModel"; isPointer: true }
    }
    Component { name: "QIdentityProxyModel"; prototype: "QAbstractProxyModel" }
    Component {
        name: "QSortFilterProxyModel"
        prototype: "QAbstractProxyModel"
        exports: ["com.ford.hmiframework/FSortFilterProxyListModel 1.0"]
        Property { name: "filterRegExp"; type: "QRegExp" }
        Property { name: "filterKeyColumn"; type: "int" }
        Property { name: "dynamicSortFilter"; type: "bool" }
        Property { name: "filterCaseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "sortCaseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "isSortLocaleAware"; type: "bool" }
        Property { name: "sortRole"; type: "int" }
        Property { name: "filterRole"; type: "int" }
        Method {
            name: "setFilterRegExp"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterWildcard"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterFixedString"
            Parameter { name: "pattern"; type: "string" }
        }
        Method { name: "clear" }
        Method { name: "invalidate" }
    }
}
